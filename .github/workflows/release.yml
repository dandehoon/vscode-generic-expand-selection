name: Release

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    # Only run if this is a merge commit (PR merge) and contains version bump
    if: contains(github.event.head_commit.message, 'chore: bump version to v')

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Extract version from commit message
      id: extract-version
      uses: actions-ecosystem/action-regex-match@v2
      with:
        text: ${{ github.event.head_commit.message }}
        regex: 'chore: bump version to v([\d.]+)'
        flags: gm

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22.x'

    - name: Setup pnpm
      uses: pnpm/action-setup@v4

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v4
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --frozen-lockfile

    - name: Run tests
      run: xvfb-run -a pnpm test
      env:
        CI: true

    - name: Build extension
      run: pnpm run build

    - name: Create Tag
      uses: mathieudutour/github-tag-action@v6.1
      with:
        custom_tag: v${{ steps.extract-version.outputs.group1 }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        tag_prefix: ''
        tag_message: 'Release v${{ steps.extract-version.outputs.group1 }}'

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.extract-version.outputs.group1 }}
        name: Release v${{ steps.extract-version.outputs.group1 }}
        body: |
          ## Release v${{ steps.extract-version.outputs.group1 }}

          Automated release created from version bump commit.

          **Installation:**
          - Download the `.vsix` file from the assets below
          - Install via VS Code: `code --install-extension vscode-generic-expand-selection-${{ steps.extract-version.outputs.group1 }}.vsix`
          - Or install from VS Code Extensions marketplace
        files: |
          out.vsix
        draft: false
        prerelease: false

    - name: Publish to VS Code Marketplace
      uses: HaaLeo/publish-vscode-extension@v1
      with:
        pat: ${{ secrets.VSCE_PAT }}
        registryUrl: https://marketplace.visualstudio.com
        extensionFile: out.vsix
